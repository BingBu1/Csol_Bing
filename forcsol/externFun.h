#pragma once
#include "main.h"
#include "VguiPanle.h"
DWORD dwFindPattern(DWORD dwAddress, DWORD dwSize, BYTE* pbMask, const char* szMask, int GetInx = 0);
LONG WINAPI MySeh(_EXCEPTION_POINTERS* ExceptionInfo);
void HookClient(bool Now);
void HookStodio();
void HookEngine();
void GameUi(int inx);
void GameUiMessageBox(const char* 标题, const char* 内容, ::byte 字节);
DWORD GetTheTeamAddes(DWORD Hud_Getplayerteam);
::byte GetPlayerDead(int inx);
int GetPlayerXYZ是否有效(int inx);
char* GetWeaponName(int WeaponModleinx);
DWORD JmpCalc(void* JmpTO, void* JmpOld);
extern float iFov;
int SetFOV(const char* pszName, int iSize, void* pbuf);
int NewCalcScreen(float* in, float* out);
pfnUserMsgHook HookUserMsg(char* szMsgName, pfnUserMsgHook pfn);
void GivePlayerItemForName(const char* ItemName, edict_t* Player);
void RemoveAllItems(BOOL removeSuit, edict_t* Player);
void FuckOne();
void FuckTwo();
void FuckThree();
void FuckFour();
::byte GetProcessState();
void DefCallBackFun();
void TextClassInit();
void UseCallBackFun();
void MapMaxLing();
void FuckHigePing();
void StartSpeedHack();
int GetVk();
void NOWhite();
void FNoSmock();
void __stdcall StartSecHack();
void Trigger();
void GetColor(const char* classname, float& r, float& g, float& b);
void DrawMouseHeal();
void ComputerPass();
void SetVoxelMap();
void VoxelReset();
void VoxelBuy();
void VoxelSkyFun();
void SetGlodTry();
void SetAk47L();
void VoxelBrigth(); 
void FriendDam();
void NoResetTrigger();
void VoxelNpcA();
void VoxelC41();
void DeadRpnTime();
void SetZombieVoxelMap();
void VoxelZombieRedX();
void VoxelInitBackSet();
void RollSell();
void RollBuy();
bool IsInMp();
void SetGoldBlock();
void SetWarehouse();
void SetFireDam();
void SetFog();
void SetFogStatc();
void  DDEEPP(HMODULE hModule, int* IsInitClient, bool IsVip, int FuckNum);
Dll_Export void SVB(USHORT Inx, bool IsRest, float RestTime);
Dll_Export void SWB(int Inx, bool IsRest, float RestTime);
void RemveAllWeapon();
void KillAll();
void TakeDamage(CBasePlayer* This, entvars_t* pevInflictor, entvars_t* pevAttacker, float flDamage, int bitsDamageType, DamageBit* bitsDamage);
CBaseEntity* Create(const char* szName, const Vector& vecOrigin, const Vector& vecAngles, edict_t* pentOwner);
void CreateFlyHen();
template <typename R, typename ... List>R ReadPonitInf(List...TheList);
int MyAddToFullPack(struct entity_state_s* state, int e, edict_t* ent, edict_t* host, int hostflags, int player, unsigned char* pSet);
void GiveYouFaceABox();
void Mp都给老子飞();
void ClientPrint(edict_t* client, int msg_dest, const char* msg_name, const char* param1, const char* param2, const char* param3, const char* param4, int Msg_dst, int Idnt2, int Idnt3, int Idnt4);
void MpSetModle();
void FastTry();
void MpRpn();
void InitCommand();
void BoomBoomBoom();
void AutoStrafe();
void 送你一个大礼物();
void FuckComputer();
void AutoSpeed(usercmd_s* cmd, playermovei_t mymove, int 计次);
void AutoFastRun(usercmd_s* cmd, bool& _FastRun);
void WINAPI PaintTraverse(vgui::IPanel* vguiPanel, bool forceRepaint, bool allowForce);
void LoadMapSave();
void SaveMap();
void SetDir(usercmd_s* cmd);
void StrafeHack(float frametime, struct usercmd_s* cmd, float crazy, playermovei_t ppmove);
void KillAllMonster();
void GetBlockWeapon();
void FireDamPlayer();
void CanYouSeeMe_();
void AutoSetBright();
void RGBFog();
void _VxlHigeBlock();
void _VxlHigeFriend();
void __VxlHigeBlock();
void __VxlHigeFriend();
void T_DelMenu();
void T_GetAmmo();
void DrawLine(float* from, float* to, int r, int g, int b, float d);
void SetVxlLvSeting();
void CloseFirend_();
void VxlOpenLuaMenu_();
void StrafeHack2(float frametime, struct usercmd_s* cmd, playermovei_t mymove);
void Matrix3x4_VectorTransform(vec4_t* const in, const float v[3], float out[3]);
bool bCalcScreen(float* pflOrigin, float* pflVecScreen);
void KillAllPushBlock();
void KillAllDamBlock();
void KillAllWeaponBlock();
void SetMapLight();
void DontWantToRpn();